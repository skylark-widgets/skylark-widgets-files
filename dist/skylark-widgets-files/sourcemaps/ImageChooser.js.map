{"version":3,"sources":["ImageChooser.js"],"names":["define","Widget","select","files","ImageChooser","inherit","_construct","parent","prototype","call","this","skin","getSkin","img","document","createElement","style","visibility","position","borderStyle","left","top","width","height","objectFit","backgroundImage","alphaImageUrl","backgroundRepeat","backgroundSize","_elm","appendChild","value","self","ondragover","preventDefault","ondragstart","ondrop","event","dataTransfer","length","file","Image","fileIsImage","readImageFile","uuid","getData","DragBuffer","get","setValue","onChange","Editor","alert","onclick","picked","reader","FileReader","onload","result","readAsDataURL","setOnChange","cursor","image","src","data","getValue"],"mappings":";;;;;;;AAAAA,QACC,8BACG,2BACA,WACF,SACDC,EACAC,EACAC,GAEA,aAUC,IAAIC,EAAeH,EAAOI,SAC1BC,WAAe,SAAUC,GAExBN,EAAOO,UAAUF,WAAWG,KAAKC,KAAMH,EAAQ,OAE/C,IAAII,EAAOD,KAAKE,UAGhBF,KAAKG,IAAMC,SAASC,cAAc,OAClCL,KAAKG,IAAIG,MAAMC,WAAa,UAC5BP,KAAKG,IAAIG,MAAME,SAAW,WAC1BR,KAAKG,IAAIG,MAAMG,YAAc,OAC7BT,KAAKG,IAAIG,MAAMI,KAAO,MACtBV,KAAKG,IAAIG,MAAMK,IAAM,MACrBX,KAAKG,IAAIG,MAAMM,MAAQ,OACvBZ,KAAKG,IAAIG,MAAMO,OAAS,OACxBb,KAAKG,IAAIG,MAAMQ,UAAY,UAE3Bd,KAAKG,IAAIG,MAAMS,gBAAkB,QAAWd,EAAKe,cAAgB,KACjEhB,KAAKG,IAAIG,MAAMW,iBAAmB,SAClCjB,KAAKG,IAAIG,MAAMY,eAAiB,cAChClB,KAAKmB,KAAKC,YAAYpB,KAAKG,KAG3BH,KAAKqB,MAAQ,KAEb,IAAIC,EAAOtB,KAEXA,KAAKmB,KAAKI,WAAahC,EAAOiC,eAC9BxB,KAAKmB,KAAKM,YAAclC,EAAOiC,eAG/BxB,KAAKmB,KAAKO,OAAS,SAASC,GAI3B,GAFAA,EAAMH,iBAEHG,EAAMC,aAAanC,MAAMoC,OAAS,EACrC,CACC,IAAIC,EAAOH,EAAMC,aAAanC,MAAM,GAEjCsC,MAAMC,YAAYF,IAEpBG,EAAcH,OAIhB,CACC,IAAII,EAAOP,EAAMC,aAAaO,QAAQ,QAClCd,EAAQe,WAAWC,IAAIH,GAExBb,aAAiBU,OAEnBT,EAAKgB,SAASjB,GACdC,EAAKiB,SAASlB,IAIdmB,OAAOC,MAAM,0BAMhBzC,KAAKmB,KAAKuB,QAAU,WAEE,OAAlBpB,EAAKiB,UAEP/C,GACCmD,OAAS,SAASlD,GACdA,EAAMoC,OAAS,GACjBI,EAAcxC,EAAM,QAOzB,IAAIwC,EAAgB,SAASH,GAE5B,IAAIc,EAAS,IAAIC,WACjBD,EAAOE,OAAS,WAEfxB,EAAKgB,SAAS,IAAIP,MAAMa,EAAOG,SAC/BzB,EAAKiB,SAASjB,EAAKD,QAEpBuB,EAAOI,cAAclB,IAStB9B,KAAKuC,SAAW,MAUjBU,YAAc,SAASV,GAEtBvC,KAAKuC,SAAWA,EAChBvC,KAAKG,IAAIG,MAAM4C,OAAS,WASzBZ,SAAW,SAASa,GAEnBnD,KAAKqB,MAAQ8B,EACbnD,KAAKG,IAAIiD,IAAMD,EAAME,MAStBC,SAAW,WACV,OAAOtD,KAAKqB,SAKd,OAAO5B,EAAMC,aAAeA","file":"../ImageChooser.js","sourcesContent":["define([\r\n\t\"skylark-widgets-base/Widget\",\r\n    \"skylark-io-diskfs/select\",\r\n    \"./files\"\r\n],function(\r\n\tWidget,\r\n\tselect,\r\n\tfiles\r\n){\r\n\t\"use strict\";\r\n\r\n\t/**\r\n\t * Image chooser is used for the user to select images.\r\n\t *\r\n\t * Images can be selected by opening a file explorer or by drag and drop.\r\n\t *\r\n\t * @class ImageChooser\r\n\t * @extends {Widget}\r\n\t */\r\n\t var ImageChooser = Widget.inherit({\r\n\t\t\"_construct\" : function (parent)\r\n\t\t{\r\n\t\t\tWidget.prototype._construct.call(this, parent, \"div\");\r\n\r\n\t\t\tvar skin = this.getSkin();\r\n\r\n\t\t\t//Image\r\n\t\t\tthis.img = document.createElement(\"img\");\r\n\t\t\tthis.img.style.visibility = \"inherit\";\r\n\t\t\tthis.img.style.position = \"absolute\";\r\n\t\t\tthis.img.style.borderStyle = \"none\";\r\n\t\t\tthis.img.style.left = \"0px\";\r\n\t\t\tthis.img.style.top = \"0px\";\r\n\t\t\tthis.img.style.width = \"100%\";\r\n\t\t\tthis.img.style.height = \"100%\";\r\n\t\t\tthis.img.style.objectFit = \"contain\";\r\n\t\t\t//this.img.style.backgroundImage = \"url(\\\"\" + Global.FILE_PATH + \"alpha.png\\\")\";\r\n\t\t\tthis.img.style.backgroundImage = \"url(\\\"\" + skin.alphaImageUrl + \"\\\")\";\r\n\t\t\tthis.img.style.backgroundRepeat = \"repeat\";\r\n\t\t\tthis.img.style.backgroundSize = \"120px 120px\";\r\n\t\t\tthis._elm.appendChild(this.img);\r\n\r\n\t\t\t//Value\r\n\t\t\tthis.value = null;\r\n\r\n\t\t\tvar self = this;\r\n\r\n\t\t\tthis._elm.ondragover = Widget.preventDefault;\r\n\t\t\tthis._elm.ondragstart = Widget.preventDefault;\r\n\r\n\t\t\t//On drop get file dropped\r\n\t\t\tthis._elm.ondrop = function(event)\r\n\t\t\t{\r\n\t\t\t\tevent.preventDefault();\r\n\r\n\t\t\t\tif(event.dataTransfer.files.length > 0)\r\n\t\t\t\t{\r\n\t\t\t\t\tvar file = event.dataTransfer.files[0];\r\n\r\n\t\t\t\t\tif(Image.fileIsImage(file))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\treadImageFile(file);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tvar uuid = event.dataTransfer.getData(\"uuid\");\r\n\t\t\t\t\tvar value = DragBuffer.get(uuid);\r\n\r\n\t\t\t\t\tif(value instanceof Image)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tself.setValue(value);\r\n\t\t\t\t\t\tself.onChange(value);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tEditor.alert(\"Only images accepted\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\t//Onclick select image file\r\n\t\t\tthis._elm.onclick = function()\r\n\t\t\t{\r\n\t\t\t\tif(self.onChange !== null)\r\n\t\t\t\t{\r\n\t\t\t\t\tselect({\r\n\t\t\t\t\t\tpicked : function(files) {\r\n\t\t\t\t\t\t\tif(files.length > 0) {\r\n\t\t\t\t\t\t\t\treadImageFile(files[0]);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}   //, \"image/*, .tga\");\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tvar readImageFile = function(file)\r\n\t\t\t{\r\n\t\t\t\tvar reader = new FileReader();\r\n\t\t\t\treader.onload = function()\r\n\t\t\t\t{\r\n\t\t\t\t\tself.setValue(new Image(reader.result));\r\n\t\t\t\t\tself.onChange(self.value);\r\n\t\t\t\t};\r\n\t\t\t\treader.readAsDataURL(file);\r\n\t\t\t};\r\n\r\n\t\t\t/**\r\n\t\t\t * On change callback function.\r\n\t\t\t *\r\n\t\t\t * @property onChange\r\n\t\t\t * @type {Function}\r\n\t\t\t */\r\n\t\t\tthis.onChange = null;\r\n\t\t},\r\n\r\n\r\n\t\t/**\r\n\t\t * Set onchange callback, called after changes.\r\n\t\t *\r\n\t\t * @method setOnChange\r\n\t\t * @param {Function} onChange\r\n\t\t */\r\n\t\tsetOnChange : function(onChange)\r\n\t\t{\r\n\t\t\tthis.onChange = onChange;\r\n\t\t\tthis.img.style.cursor = \"pointer\";\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set value stored in the input element.\r\n\t\t *\r\n\t\t * @method setValue\r\n\t\t * @param {Object} image\r\n\t\t */\r\n\t\tsetValue : function(image)\r\n\t\t{\r\n\t\t\tthis.value = image;\r\n\t\t\tthis.img.src = image.data;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Get value stored in the input element.\r\n\t\t *\r\n\t\t * @method setValue\r\n\t\t * @return {Object} Image URL.\r\n\t\t */\r\n\t\tgetValue : function() \t{\r\n\t\t\treturn this.value;\r\n\t\t}\r\n\r\n\t });\r\n\r\n\treturn files.ImageChooser = ImageChooser;\r\n});"]}